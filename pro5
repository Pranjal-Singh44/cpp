#include <iostream>
#include <string>
using namespace std;
class BankAccount {
protected:
    int accountNumber;
    string accountHolderName;
    float balance;
public:
    BankAccount(int accNo, string name, float initialBalance)
        : accountNumber(accNo), accountHolderName(name), balance(initialBalance) {}
    void displayAccountDetails() {
        cout << "Account Number: " << accountNumber << endl;
        cout << "Account Holder Name: " << accountHolderName << endl;
        cout << "Balance: " << balance << endl;
    }
    void deposit(float amount) {
        if (amount > 0) {
            balance += amount;
            cout << "Deposited: " << amount << ". New Balance: " << balance << endl;
        } else {
            cout << "Invalid deposit amount." << endl;
        }
    }
    virtual void withdraw(float amount) = 0; // Pure virtual function
};
class CurrentAccount : public BankAccount {
private:
    const float minimumBalance = 1000.0;
public:
    CurrentAccount(int accNo, string name, float initialBalance)
        : BankAccount(accNo, name, initialBalance) {}

    void withdraw(float amount) override {
        if (balance - amount >= minimumBalance) {
            balance -= amount;
            cout << "Withdrawn: " << amount << ". New Balance: " << balance << endl;
        } else {
            cout << "Withdrawal denied! Minimum balance of " << minimumBalance << " must be maintained." << endl;
        }
    }
};
class SavingAccount : public BankAccount {
private:
    const float minimumBalance = 500.0;
public:
    SavingAccount(int accNo, string name, float initialBalance)
        : BankAccount(accNo, name, initialBalance) {}
    void withdraw(float amount) override {
        if (balance - amount >= minimumBalance) {
            balance -= amount;
            cout << "Withdrawn: " << amount << ". New Balance: " << balance << endl;
        } else {
            cout << "Withdrawal denied! Minimum balance of " << minimumBalance << " must be maintained." << endl;
        }
    }
};
int main() {
    CurrentAccount currentAcc(101, "John Doe", 5000.0);
    cout << "Current Account Details:\n";
    currentAcc.displayAccountDetails();
    currentAcc.deposit(2000);
    currentAcc.withdraw(4000);
    currentAcc.withdraw(3000); 
    SavingAccount savingAcc(102, "Jane Smith", 3000.0);
    cout << "\nSaving Account Details:\n";
    savingAcc.displayAccountDetails();

    savingAcc.deposit(1000);
    savingAcc.withdraw(2500);
    savingAcc.withdraw(4000); 
    return 0;
}
